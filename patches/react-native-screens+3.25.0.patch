diff --git a/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenStackFragment.kt b/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenStackFragment.kt
index 86a7654..1693c8a 100644
--- a/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenStackFragment.kt
+++ b/node_modules/react-native-screens/android/src/main/java/com/swmansion/rnscreens/ScreenStackFragment.kt
@@ -4,12 +4,7 @@ import android.annotation.SuppressLint
 import android.content.Context
 import android.graphics.Color
 import android.os.Bundle
-import android.view.LayoutInflater
-import android.view.Menu
-import android.view.MenuInflater
-import android.view.MenuItem
-import android.view.View
-import android.view.ViewGroup
+import android.view.*
 import android.view.animation.Animation
 import android.view.animation.AnimationSet
 import android.view.animation.Transformation
@@ -25,6 +20,7 @@ class ScreenStackFragment : ScreenFragment {
     private var mToolbar: Toolbar? = null
     private var mShadowHidden = false
     private var mIsTranslucent = false
+    private var mLastFocusedElement: View? = null
 
     var searchView: CustomSearchView? = null
     var onSearchViewCreate: ((searchView: CustomSearchView) -> Unit)? = null
@@ -38,6 +34,28 @@ class ScreenStackFragment : ScreenFragment {
         )
     }
 
+    private fun getDeepestFocusedChild(): View? {
+        var v: View? = this.screen
+        while (v != null) {
+            if (v.isFocused) return v
+            v = if (v is ViewGroup) v.focusedChild else null
+        }
+        return null
+    }
+
+    override fun onStop() {
+        mLastFocusedElement = getDeepestFocusedChild()
+        super.onStop()
+    }
+
+    override fun onStart() {
+        mLastFocusedElement?.let {
+            it.requestFocus()
+        }
+
+        super.onStart()
+    }
+
     fun removeToolbar() {
         mAppBarLayout?.let {
             mToolbar?.let { toolbar ->
diff --git a/node_modules/react-native-screens/ios/RNSScreen.mm b/node_modules/react-native-screens/ios/RNSScreen.mm
index bca3fcf..4a36e65 100644
--- a/node_modules/react-native-screens/ios/RNSScreen.mm
+++ b/node_modules/react-native-screens/ios/RNSScreen.mm
@@ -890,6 +890,9 @@ Class<RCTComponentViewProtocol> RNSScreenCls(void)
   }
 
   // same flow as in viewWillAppear
+#if TARGET_OS_TV
+  _shouldNotify = NO;
+#else
   if (!_isSwiping) {
     [self.screenView notifyWillDisappear];
     if (self.transitionCoordinator.isInteractive) {
@@ -898,6 +901,7 @@ Class<RCTComponentViewProtocol> RNSScreenCls(void)
   } else {
     _shouldNotify = NO;
   }
+#endif
 
   // as per documentation of these methods
   _goingForward = !([self isBeingDismissed] || [self isMovingFromParentViewController]);
